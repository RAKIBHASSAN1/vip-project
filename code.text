//sieve prime

#include<bits/stdc++.h>
using namespace std;

int main()
{
    int usersize;
    cin>>usersize;
    const int size=usersize;

    int a[size],i,j;
    memset(a,-1,sizeof(a));
    for(i=2; i<size; i++)
    {
        if(a[i]==-1)
        {
            for(j=2; i*j<size; j++)
            {
                a[i*j]=0;
            }
        }
    }
    for(i=2; i<size; i++)
    {
        if(a[i]==-1)
            cout<<i<<" ";
    }
    cout<<endl;

    return 0;
}
LIS
#include<bits/stdc++.h>
using namespace std;
int common(int ar[],int lis[],int n)
{
    int i=1,j=2;
    int big=0;
    while(j!=n+1)
    {
            for(int p=i;p<j;p++)
            {
                cout<<"ar["<<p<<"[="<<ar[p]<<" ar["<<j<<"]="<<ar[j]<<endl;
                if(ar[p]<ar[j])
                {
                    //cout<<"ar[p]+1="<<ar[p]+1<<""lis[j]"
                    lis[j]=max(lis[p]+1,lis[j]);
                    cout<<"lis[j]="<<lis[j]<<endl;
                    if(big<lis[j])
                    {
                        big=lis[j];
                    }
                }
            }
            cout<<"lis[j]=last="<<lis[j]<<endl;
            j++;
            i=1;


    }
    return big;
}
int main()
{
    int n;
    cin>>n;
    int ar[10000];
    int lis[1000];
    for(int i=1;i<=n;i++)
    {
        lis[i]=1;
    }
    for(int i=1;i<=n;i++)
    {
        cin>>ar[i];
    }
    cout<<common(ar,lis,n)<<endl;

    return 0;
}
KMP
#include<bits/stdc++.h>
using namespace std;
int con;
int main()
{
    string t,p;
    cin>>t>>p;
    int st,sp;
    st=t.size();
    sp=p.size();
    int ind[sp];
    memset(ind,0,sizeof(ind));
    ind[0]=0;

    for(int i=0,j=1;j<sp;j++)
    {
        if(p[i]==p[j])
        {
            ind[j]=i+1;
            i++;
        }
        else
        {
             if(i>0)
               {
                 j--;
               }
             if(i>0)
              {

                i=ind[i-1];
             }
        }

    }

    for(int i=0,j=0;j<st;j++)
    {
        cout<<"p["<<i<<"]="<<p[i]<<" t["<<j<<"]="<<t[j]<<endl;
        //cout<<"i="<<i<<" j="<<j<<endl;
        if(p[i]==t[j])
        {
            i++;
            con++;
        }
        else
        {
            if(i>0)
            {
                j--;
            }
            if(i>0)
            {
                i=ind[i-1];
            }
            cout<<endl;
        }
      if(i==sp)
      {
          cout<<"Matching Position :"<<j-i+1<<endl;
          break;
      }

    }
    return 0;
}
/*
abcxabcdabxabcdabcdabcx
abcdabcx
*/
